// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebScraperApi.Models.Data;

#nullable disable

namespace WebScraperApi.Migrations
{
    [DbContext(typeof(ScrapDBContext))]
    [Migration("20231227200541_int1")]
    partial class int1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebScraperApi.Models.CardBasicData", b =>
                {
                    b.Property<string>("tenderIdString")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("agencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("agencyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("branchId")
                        .HasColumnType("int");

                    b.Property<string>("branchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("buyingCost")
                        .HasColumnType("real");

                    b.Property<float>("condetionalBookletPrice")
                        .HasColumnType("real");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("currentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("currentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("currentTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("financialFees")
                        .HasColumnType("real");

                    b.Property<bool>("hasInvitations")
                        .HasColumnType("bit");

                    b.Property<string>("insideKSA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("invitationCost")
                        .HasColumnType("real");

                    b.Property<DateTime?>("lastEnqueriesDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("lastEnqueriesDateHijri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("lastOfferPresentationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("lastOfferPresentationDateHijri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("multipleSearch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("offersOpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("offersOpeningDateHijri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("referenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("remainingDays")
                        .HasColumnType("int");

                    b.Property<int>("remainingHours")
                        .HasColumnType("int");

                    b.Property<int>("remainingMins")
                        .HasColumnType("int");

                    b.Property<DateTime?>("submitionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("technicalOrganizationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tenderActivityId")
                        .HasColumnType("int");

                    b.Property<string>("tenderActivityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenderActivityNameList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tenderId")
                        .HasColumnType("int");

                    b.Property<string>("tenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tenderStatusId")
                        .HasColumnType("int");

                    b.Property<string>("tenderStatusIdString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenderStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tenderTypeId")
                        .HasColumnType("int");

                    b.Property<string>("tenderTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tenderIdString");

                    b.ToTable("CardBasicDatas");
                });

            modelBuilder.Entity("WebScraperApi.Models.GetRelationsDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompetitionActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstructionWorks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutionLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaintenanceAndOperationWorks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplyItemsCompetition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenderIdString")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("tenderIdString");

                    b.ToTable("GetRelationsDetails");
                });

            modelBuilder.Entity("WebScraperApi.Models.GetRelationsDetail", b =>
                {
                    b.HasOne("WebScraperApi.Models.CardBasicData", "CardBasicData")
                        .WithMany()
                        .HasForeignKey("tenderIdString")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardBasicData");
                });
#pragma warning restore 612, 618
        }
    }
}
